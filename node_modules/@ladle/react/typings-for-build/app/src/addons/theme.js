import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import queryString from "query-string";
import { useHotkeys } from "react-hotkeys-hook";
import config from "../get-config";
import { Bulb } from "../icons";
import { ThemeState, ActionType } from "../../../shared/types";
export const getQuery = (locationSearch) => {
    const theme = queryString.parse(locationSearch).theme;
    switch (theme) {
        case ThemeState.Light:
            return ThemeState.Light;
        case ThemeState.Dark:
            return ThemeState.Dark;
        case ThemeState.Auto:
            return ThemeState.Auto;
        default:
            return import.meta.env.VITE_PUBLIC_LADLE_THEME;
    }
};
export const Button = ({ globalState, dispatch }) => {
    const darkText = "Switch to dark theme.";
    const lightText = "Switch to light theme.";
    const changeTheme = () => {
        const newTheme = globalState.theme === ThemeState.Light
            ? ThemeState.Dark
            : ThemeState.Light;
        document.documentElement.setAttribute("data-theme", newTheme);
        dispatch({ type: ActionType.UpdateTheme, value: newTheme });
    };
    useHotkeys(config.hotkeys.darkMode, changeTheme, {
        enabled: globalState.hotkeys && config.addons.mode.enabled,
    });
    return (_jsx("li", { children: _jsxs("button", { "aria-label": globalState.theme === ThemeState.Light ? darkText : lightText, title: globalState.theme === ThemeState.Light ? darkText : lightText, onClick: changeTheme, type: "button", children: [_jsx(Bulb, {}), _jsx("span", { className: "ladle-addon-tooltip", children: globalState.theme === ThemeState.Light ? darkText : lightText }), _jsxs("label", { children: ["Switch to", " ", globalState.theme === ThemeState.Light
                            ? ThemeState.Dark
                            : ThemeState.Light, " ", "theme"] })] }) }));
};
