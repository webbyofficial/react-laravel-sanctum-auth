import type { StoryTree, StoryTreeItem } from "../../../shared/types";
export declare const walkTree: (_tree: StoryTree, levels: string[], fn: (item: StoryTreeItem) => void, leafOnly: boolean) => void;
export declare const getLastLeafId: (node: StoryTreeItem) => string;
export declare const getParentId: (nodes: StoryTree, nodeId: string, parentId: string | null) => string | null;
export declare const getPrevId: (nodes: StoryTree, nodeId: string, parentId: string | null) => string | null;
export declare const getSubtree: (nodes: StoryTree, nodeId: string) => StoryTree;
export declare const getFirstLink: (nodes: StoryTree, nodeId: string) => StoryTreeItem;
export declare const getFirstChildId: (nodes: StoryTree, nodeId: string) => string | null;
export declare const getNextId: (nodes: StoryTree, nodeId: string, closestOmmer: string | null) => string | null;
export declare const getEndId: (nodes: StoryTree) => string;
export declare const toggleIsExpanded: (arr: StoryTree, toggledNode: StoryTreeItem) => StoryTree;
export declare function debounce<T extends (...args: any[]) => any>(fn: T, delay: number): (...funcArgs: Parameters<T>) => void;
