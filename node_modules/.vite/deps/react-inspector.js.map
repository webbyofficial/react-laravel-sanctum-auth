{
  "version": 3,
  "sources": ["../../react-inspector/node_modules/is-object/index.js", "../../react-inspector/node_modules/is-window/index.js", "../../react-inspector/node_modules/is-dom/index.js", "../../react-inspector/src/styles/themes/index.tsx", "../../react-inspector/src/styles/themes/chromeDark.tsx", "../../react-inspector/src/styles/themes/chromeLight.tsx", "../../react-inspector/src/object-inspector/ObjectInspector.tsx", "../../react-inspector/src/tree-view/TreeView.tsx", "../../react-inspector/src/tree-view/ExpandedPathsContext.tsx", "../../react-inspector/src/tree-view/TreeNode.tsx", "../../react-inspector/src/styles/styles.tsx", "../../react-inspector/src/styles/unselectable.tsx", "../../react-inspector/src/styles/base.tsx", "../../react-inspector/src/tree-view/pathUtils.ts", "../../react-inspector/src/object-inspector/ObjectRootLabel.tsx", "../../react-inspector/src/object/ObjectName.tsx", "../../react-inspector/src/object-inspector/ObjectPreview.tsx", "../../react-inspector/src/object/ObjectValue.tsx", "../../react-inspector/src/utils/objectPrototype.tsx", "../../react-inspector/src/utils/propertyUtils.tsx", "../../react-inspector/src/object-inspector/ObjectLabel.tsx", "../../react-inspector/src/table-inspector/TableInspector.tsx", "../../react-inspector/src/table-inspector/getHeaders.ts", "../../react-inspector/src/table-inspector/DataContainer.tsx", "../../react-inspector/src/table-inspector/HeaderContainer.tsx", "../../react-inspector/src/table-inspector/TH.tsx", "../../react-inspector/src/dom-inspector/DOMInspector.tsx", "../../react-inspector/src/dom-inspector/DOMNodePreview.tsx", "../../react-inspector/src/dom-inspector/shouldInline.tsx", "../../react-inspector/src/index.tsx"],
  "sourcesContent": ["'use strict';\n\nmodule.exports = function isObject(x) {\n\treturn typeof x === 'object' && x !== null;\n};\n", "'use strict';\n\nmodule.exports = function (obj) {\n\n  if (obj == null) {\n    return false;\n  }\n\n  var o = Object(obj);\n\n  return o === o.window;\n};\n", "var isObject = require('is-object')\nvar isWindow = require('is-window')\n\nfunction isNode (val) {\n  if (!isObject(val) || !isWindow(window) || typeof window.Node !== 'function') {\n    return false\n  }\n\n  return typeof val.nodeType === 'number' &&\n    typeof val.nodeName === 'string'\n}\n\nmodule.exports = isNode\n", "export { theme as chromeDark } from './chromeDark';\nexport { theme as chromeLight } from './chromeLight';\n", "export const theme = {\n  BASE_FONT_FAMILY: 'Menlo, monospace',\n  BASE_FONT_SIZE: '11px',\n  BASE_LINE_HEIGHT: 1.2,\n\n  BASE_BACKGROUND_COLOR: 'rgb(36, 36, 36)',\n  BASE_COLOR: 'rgb(213, 213, 213)',\n\n  OBJECT_PREVIEW_ARRAY_MAX_PROPERTIES: 10,\n  OBJECT_PREVIEW_OBJECT_MAX_PROPERTIES: 5,\n  OBJECT_NAME_COLOR: 'rgb(227, 110, 236)',\n  OBJECT_VALUE_NULL_COLOR: 'rgb(127, 127, 127)',\n  OBJECT_VALUE_UNDEFINED_COLOR: 'rgb(127, 127, 127)',\n  OBJECT_VALUE_REGEXP_COLOR: 'rgb(233, 63, 59)',\n  OBJECT_VALUE_STRING_COLOR: 'rgb(233, 63, 59)',\n  OBJECT_VALUE_SYMBOL_COLOR: 'rgb(233, 63, 59)',\n  OBJECT_VALUE_NUMBER_COLOR: 'hsl(252, 100%, 75%)',\n  OBJECT_VALUE_BOOLEAN_COLOR: 'hsl(252, 100%, 75%)',\n  OBJECT_VALUE_FUNCTION_PREFIX_COLOR: 'rgb(85, 106, 242)',\n\n  HTML_TAG_COLOR: 'rgb(93, 176, 215)',\n  HTML_TAGNAME_COLOR: 'rgb(93, 176, 215)',\n  HTML_TAGNAME_TEXT_TRANSFORM: 'lowercase',\n  HTML_ATTRIBUTE_NAME_COLOR: 'rgb(155, 187, 220)',\n  HTML_ATTRIBUTE_VALUE_COLOR: 'rgb(242, 151, 102)',\n  HTML_COMMENT_COLOR: 'rgb(137, 137, 137)',\n  HTML_DOCTYPE_COLOR: 'rgb(192, 192, 192)',\n\n  ARROW_COLOR: 'rgb(145, 145, 145)',\n  ARROW_MARGIN_RIGHT: 3,\n  ARROW_FONT_SIZE: 12,\n  ARROW_ANIMATION_DURATION: '0',\n\n  TREENODE_FONT_FAMILY: 'Menlo, monospace',\n  TREENODE_FONT_SIZE: '11px',\n  TREENODE_LINE_HEIGHT: 1.2,\n  TREENODE_PADDING_LEFT: 12,\n\n  TABLE_BORDER_COLOR: 'rgb(85, 85, 85)',\n  TABLE_TH_BACKGROUND_COLOR: 'rgb(44, 44, 44)',\n  TABLE_TH_HOVER_COLOR: 'rgb(48, 48, 48)',\n  TABLE_SORT_ICON_COLOR: 'black', //'rgb(48, 57, 66)',\n  TABLE_DATA_BACKGROUND_IMAGE:\n    'linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0) 50%, rgba(51, 139, 255, 0.0980392) 50%, rgba(51, 139, 255, 0.0980392))',\n  TABLE_DATA_BACKGROUND_SIZE: '128px 32px',\n};\n", "export const theme = {\n  BASE_FONT_FAMILY: 'Menlo, monospace',\n  BASE_FONT_SIZE: '11px',\n  BASE_LINE_HEIGHT: 1.2,\n\n  BASE_BACKGROUND_COLOR: 'white',\n  BASE_COLOR: 'black',\n\n  OBJECT_PREVIEW_ARRAY_MAX_PROPERTIES: 10,\n  OBJECT_PREVIEW_OBJECT_MAX_PROPERTIES: 5,\n  OBJECT_NAME_COLOR: 'rgb(136, 19, 145)',\n  OBJECT_VALUE_NULL_COLOR: 'rgb(128, 128, 128)',\n  OBJECT_VALUE_UNDEFINED_COLOR: 'rgb(128, 128, 128)',\n  OBJECT_VALUE_REGEXP_COLOR: 'rgb(196, 26, 22)',\n  OBJECT_VALUE_STRING_COLOR: 'rgb(196, 26, 22)',\n  OBJECT_VALUE_SYMBOL_COLOR: 'rgb(196, 26, 22)',\n  OBJECT_VALUE_NUMBER_COLOR: 'rgb(28, 0, 207)',\n  OBJECT_VALUE_BOOLEAN_COLOR: 'rgb(28, 0, 207)',\n  OBJECT_VALUE_FUNCTION_PREFIX_COLOR: 'rgb(13, 34, 170)',\n\n  HTML_TAG_COLOR: 'rgb(168, 148, 166)',\n  HTML_TAGNAME_COLOR: 'rgb(136, 18, 128)',\n  HTML_TAGNAME_TEXT_TRANSFORM: 'lowercase',\n  HTML_ATTRIBUTE_NAME_COLOR: 'rgb(153, 69, 0)',\n  HTML_ATTRIBUTE_VALUE_COLOR: 'rgb(26, 26, 166)',\n  HTML_COMMENT_COLOR: 'rgb(35, 110, 37)',\n  HTML_DOCTYPE_COLOR: 'rgb(192, 192, 192)',\n\n  ARROW_COLOR: '#6e6e6e',\n  ARROW_MARGIN_RIGHT: 3,\n  ARROW_FONT_SIZE: 12,\n  ARROW_ANIMATION_DURATION: '0',\n\n  TREENODE_FONT_FAMILY: 'Menlo, monospace',\n  TREENODE_FONT_SIZE: '11px',\n  TREENODE_LINE_HEIGHT: 1.2,\n  TREENODE_PADDING_LEFT: 12,\n\n  TABLE_BORDER_COLOR: '#aaa',\n  TABLE_TH_BACKGROUND_COLOR: '#eee',\n  TABLE_TH_HOVER_COLOR: 'hsla(0, 0%, 90%, 1)',\n  TABLE_SORT_ICON_COLOR: '#6e6e6e',\n  TABLE_DATA_BACKGROUND_IMAGE:\n    'linear-gradient(to bottom, white, white 50%, rgb(234, 243, 255) 50%, rgb(234, 243, 255))',\n  TABLE_DATA_BACKGROUND_SIZE: '128px 32px',\n};\n", "import React, { FC } from 'react';\nimport { TreeView } from '../tree-view/TreeView';\n\nimport { ObjectRootLabel } from './ObjectRootLabel';\nimport { ObjectLabel } from './ObjectLabel';\n\nimport { propertyIsEnumerable } from '../utils/objectPrototype';\nimport { getPropertyValue } from '../utils/propertyUtils';\n\nimport { themeAcceptor } from '../styles';\n\nconst createIterator = (showNonenumerable: any, sortObjectKeys: any) => {\n  const objectIterator = function* (data: any) {\n    const shouldIterate = (typeof data === 'object' && data !== null) || typeof data === 'function';\n    if (!shouldIterate) return;\n\n    const dataIsArray = Array.isArray(data);\n\n    // iterable objects (except arrays)\n    if (!dataIsArray && data[Symbol.iterator]) {\n      let i = 0;\n      for (const entry of data) {\n        if (Array.isArray(entry) && entry.length === 2) {\n          const [k, v] = entry;\n          yield {\n            name: k,\n            data: v,\n          };\n        } else {\n          yield {\n            name: i.toString(),\n            data: entry,\n          };\n        }\n        i++;\n      }\n    } else {\n      const keys = Object.getOwnPropertyNames(data);\n      if (sortObjectKeys === true && !dataIsArray) {\n        // Array keys should not be sorted in alphabetical order\n        keys.sort();\n      } else if (typeof sortObjectKeys === 'function') {\n        keys.sort(sortObjectKeys);\n      }\n\n      for (const propertyName of keys) {\n        if (propertyIsEnumerable.call(data, propertyName)) {\n          const propertyValue = getPropertyValue(data, propertyName);\n          yield {\n            name: propertyName || `\"\"`,\n            data: propertyValue,\n          };\n        } else if (showNonenumerable) {\n          // To work around the error (happens some time when propertyName === 'caller' || propertyName === 'arguments')\n          // 'caller' and 'arguments' are restricted function properties and cannot be accessed in this context\n          // http://stackoverflow.com/questions/31921189/caller-and-arguments-are-restricted-function-properties-and-cannot-be-access\n          let propertyValue;\n          try {\n            propertyValue = getPropertyValue(data, propertyName);\n          } catch (e) {\n            // console.warn(e)\n          }\n\n          if (propertyValue !== undefined) {\n            yield {\n              name: propertyName,\n              data: propertyValue,\n              isNonenumerable: true,\n            };\n          }\n        }\n      }\n\n      // [[Prototype]] of the object: `Object.getPrototypeOf(data)`\n      // the property name is shown as \"__proto__\"\n      if (showNonenumerable && data !== Object.prototype /* already added */) {\n        yield {\n          name: '__proto__',\n          data: Object.getPrototypeOf(data),\n          isNonenumerable: true,\n        };\n      }\n    }\n  };\n\n  return objectIterator;\n};\n\nconst defaultNodeRenderer = ({ depth, name, data, isNonenumerable }: any) =>\n  depth === 0 ? (\n    <ObjectRootLabel name={name} data={data} />\n  ) : (\n    <ObjectLabel name={name} data={data} isNonenumerable={isNonenumerable} />\n  );\n\n/**\n * Tree-view for objects\n */\nconst ObjectInspector: FC<any> = ({ showNonenumerable = false, sortObjectKeys, nodeRenderer, ...treeViewProps }) => {\n  const dataIterator = createIterator(showNonenumerable, sortObjectKeys);\n  const renderer = nodeRenderer ? nodeRenderer : defaultNodeRenderer;\n\n  return <TreeView nodeRenderer={renderer} dataIterator={dataIterator} {...treeViewProps} />;\n};\n\n// ObjectInspector.propTypes = {\n//   /** An integer specifying to which level the tree should be initially expanded. */\n//   expandLevel: PropTypes.number,\n//   /** An array containing all the paths that should be expanded when the component is initialized, or a string of just one path */\n//   expandPaths: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n\n//   name: PropTypes.string,\n//   /** Not required prop because we also allow undefined value */\n//   data: PropTypes.any,\n\n//   /** Show non-enumerable properties */\n//   showNonenumerable: PropTypes.bool,\n//   /** Sort object keys with optional compare function. */\n//   sortObjectKeys: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n\n//   /** Provide a custom nodeRenderer */\n//   nodeRenderer: PropTypes.func,\n// };\n\nconst themedObjectInspector = themeAcceptor(ObjectInspector);\n\nexport { themedObjectInspector as ObjectInspector };\n", "import React, { useContext, useCallback, useLayoutEffect, useState, memo } from 'react';\nimport { ExpandedPathsContext } from './ExpandedPathsContext';\nimport { TreeNode } from './TreeNode';\nimport { DEFAULT_ROOT_PATH, hasChildNodes, getExpandedPaths } from './pathUtils';\n\nimport { useStyles } from '../styles';\n\nconst ConnectedTreeNode = memo<any>((props) => {\n  const { data, dataIterator, path, depth, nodeRenderer } = props;\n  const [expandedPaths, setExpandedPaths] = useContext(ExpandedPathsContext);\n  const nodeHasChildNodes = hasChildNodes(data, dataIterator);\n  const expanded = !!expandedPaths[path];\n\n  const handleClick = useCallback(\n    () =>\n      nodeHasChildNodes &&\n      setExpandedPaths((prevExpandedPaths) => ({\n        ...prevExpandedPaths,\n        [path]: !expanded,\n      })),\n    [nodeHasChildNodes, setExpandedPaths, path, expanded]\n  );\n\n  return (\n    <TreeNode\n      expanded={expanded}\n      onClick={handleClick}\n      // show arrow anyway even if not expanded and not rendering children\n      shouldShowArrow={nodeHasChildNodes}\n      // show placeholder only for non root nodes\n      shouldShowPlaceholder={depth > 0}\n      // Render a node from name and data (or possibly other props like isNonenumerable)\n      nodeRenderer={nodeRenderer}\n      {...props}>\n      {\n        // only render if the node is expanded\n        expanded\n          ? [...dataIterator(data)].map(({ name, data, ...renderNodeProps }) => {\n              return (\n                <ConnectedTreeNode\n                  name={name}\n                  data={data}\n                  depth={depth + 1}\n                  path={`${path}.${name}`}\n                  key={name}\n                  dataIterator={dataIterator}\n                  nodeRenderer={nodeRenderer}\n                  {...renderNodeProps}\n                />\n              );\n            })\n          : null\n      }\n    </TreeNode>\n  );\n});\n\n// ConnectedTreeNode.propTypes = {\n//   name: PropTypes.string,\n//   data: PropTypes.any,\n//   dataIterator: PropTypes.func,\n//   depth: PropTypes.number,\n//   expanded: PropTypes.bool,\n//   nodeRenderer: PropTypes.func,\n// };\n\nexport const TreeView = memo<any>(({ name, data, dataIterator, nodeRenderer, expandPaths, expandLevel }) => {\n  const styles = useStyles('TreeView');\n  const stateAndSetter = useState({});\n  const [, setExpandedPaths] = stateAndSetter;\n\n  useLayoutEffect(\n    () =>\n      setExpandedPaths((prevExpandedPaths) =>\n        getExpandedPaths(data, dataIterator, expandPaths, expandLevel, prevExpandedPaths)\n      ),\n    [data, dataIterator, expandPaths, expandLevel]\n  );\n\n  return (\n    <ExpandedPathsContext.Provider value={stateAndSetter}>\n      <ol role=\"tree\" style={styles.treeViewOutline}>\n        <ConnectedTreeNode\n          name={name}\n          data={data}\n          dataIterator={dataIterator}\n          depth={0}\n          path={DEFAULT_ROOT_PATH}\n          nodeRenderer={nodeRenderer}\n        />\n      </ol>\n    </ExpandedPathsContext.Provider>\n  );\n});\n\n// TreeView.propTypes = {\n//   name: PropTypes.string,\n//   data: PropTypes.any,\n//   dataIterator: PropTypes.func,\n//   nodeRenderer: PropTypes.func,\n//   expandPaths: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n//   expandLevel: PropTypes.number,\n// };\n", "/* eslint-disable @typescript-eslint/no-empty-function */\nimport { createContext } from 'react';\n\nexport const ExpandedPathsContext = createContext<[any, (...args: any[]) => any]>([{}, () => {}]);\n", "/* eslint-disable @typescript-eslint/no-empty-function */\nimport React, { Children, FC, memo } from 'react';\nimport { useStyles } from '../styles';\n\nconst Arrow: FC<any> = ({ expanded, styles }) => (\n  <span\n    style={{\n      ...styles.base,\n      ...(expanded ? styles.expanded : styles.collapsed),\n    }}>\n    ▶\n  </span>\n);\n\nexport const TreeNode: FC<any> = memo((props) => {\n  props = {\n    expanded: true,\n    nodeRenderer: ({ name }: any) => <span>{name}</span>,\n    onClick: () => {},\n    shouldShowArrow: false,\n    shouldShowPlaceholder: true,\n    ...props,\n  };\n  const { expanded, onClick, children, nodeRenderer, title, shouldShowArrow, shouldShowPlaceholder } = props;\n\n  const styles = useStyles('TreeNode');\n  const NodeRenderer = nodeRenderer;\n\n  return (\n    <li aria-expanded={expanded} role=\"treeitem\" style={styles.treeNodeBase} title={title}>\n      <div style={styles.treeNodePreviewContainer} onClick={onClick}>\n        {shouldShowArrow || Children.count(children) > 0 ? (\n          <Arrow expanded={expanded} styles={styles.treeNodeArrow} />\n        ) : (\n          shouldShowPlaceholder && <span style={styles.treeNodePlaceholder}>&nbsp;</span>\n        )}\n        <NodeRenderer {...props} />\n      </div>\n\n      <ol role=\"group\" style={styles.treeNodeChildNodesContainer}>\n        {expanded ? children : undefined}\n      </ol>\n    </li>\n  );\n});\n\n// TreeNode.propTypes = {\n//   name: PropTypes.string,\n//   data: PropTypes.any,\n//   expanded: PropTypes.bool,\n//   shouldShowArrow: PropTypes.bool,\n//   shouldShowPlaceholder: PropTypes.bool,\n//   nodeRenderer: PropTypes.func,\n//   onClick: PropTypes.func,\n// };\n", "import React, { createContext, useContext, useMemo } from 'react';\n\nimport * as themes from './themes';\nimport { createTheme } from './base';\n\nconst DEFAULT_THEME_NAME = 'chromeLight';\n\nconst ThemeContext = createContext(createTheme(themes[DEFAULT_THEME_NAME]));\n\n/**\n * Hook to get the component styles for the current theme.\n * @param {string} baseStylesKey - Name of the component to be styled\n */\nexport const useStyles = (baseStylesKey: any) => {\n  const themeStyles = useContext(ThemeContext);\n  //@ts-ignore\n  return themeStyles[baseStylesKey];\n};\n\n/**\n * HOC to create a component that accepts a \"theme\" prop and uses it to set\n * the current theme. This is intended to be used by the top-level inspector\n * components.\n * @param {Object} WrappedComponent - React component to be wrapped\n */\nexport const themeAcceptor = (WrappedComponent: any) => {\n  const ThemeAcceptor = ({ theme = DEFAULT_THEME_NAME, ...restProps }) => {\n    const themeStyles = useMemo(() => {\n      switch (Object.prototype.toString.call(theme)) {\n        case '[object String]':\n          //@ts-ignore\n          return createTheme(themes[theme]);\n        case '[object Object]':\n          return createTheme(theme);\n        default:\n          return createTheme(themes[DEFAULT_THEME_NAME]);\n      }\n    }, [theme]);\n\n    return (\n      <ThemeContext.Provider value={themeStyles}>\n        <WrappedComponent {...restProps} />\n      </ThemeContext.Provider>\n    );\n  };\n\n  // ThemeAcceptor.propTypes = {\n  //   theme: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  // };\n\n  return ThemeAcceptor;\n};\n", "export const unselectable = {\n  WebkitTouchCallout: 'none',\n  WebkitUserSelect: 'none',\n  KhtmlUserSelect: 'none',\n  MozUserSelect: 'none',\n  msUserSelect: 'none',\n  OUserSelect: 'none',\n  userSelect: 'none',\n};\n", "import { unselectable } from './unselectable';\n\nexport const createTheme = (theme: any) => ({\n  DOMNodePreview: {\n    htmlOpenTag: {\n      base: {\n        color: theme.HTML_TAG_COLOR,\n      },\n      tagName: {\n        color: theme.HTML_TAGNAME_COLOR,\n        textTransform: theme.HTML_TAGNAME_TEXT_TRANSFORM,\n      },\n      htmlAttributeName: {\n        color: theme.HTML_ATTRIBUTE_NAME_COLOR,\n      },\n      htmlAttributeValue: {\n        color: theme.HTML_ATTRIBUTE_VALUE_COLOR,\n      },\n    },\n    htmlCloseTag: {\n      base: {\n        color: theme.HTML_TAG_COLOR,\n      },\n      offsetLeft: {\n        /* hack: offset placeholder */\n        marginLeft: -theme.TREENODE_PADDING_LEFT,\n      },\n      tagName: {\n        color: theme.HTML_TAGNAME_COLOR,\n        textTransform: theme.HTML_TAGNAME_TEXT_TRANSFORM,\n      },\n    },\n    htmlComment: {\n      color: theme.HTML_COMMENT_COLOR,\n    },\n    htmlDoctype: {\n      color: theme.HTML_DOCTYPE_COLOR,\n    },\n  },\n\n  ObjectPreview: {\n    objectDescription: {\n      fontStyle: 'italic',\n    },\n    preview: {\n      fontStyle: 'italic',\n    },\n    arrayMaxProperties: theme.OBJECT_PREVIEW_ARRAY_MAX_PROPERTIES,\n    objectMaxProperties: theme.OBJECT_PREVIEW_OBJECT_MAX_PROPERTIES,\n  },\n\n  ObjectName: {\n    base: {\n      color: theme.OBJECT_NAME_COLOR,\n    },\n    dimmed: {\n      opacity: 0.6,\n    },\n  },\n\n  ObjectValue: {\n    objectValueNull: {\n      color: theme.OBJECT_VALUE_NULL_COLOR,\n    },\n    objectValueUndefined: {\n      color: theme.OBJECT_VALUE_UNDEFINED_COLOR,\n    },\n    objectValueRegExp: {\n      color: theme.OBJECT_VALUE_REGEXP_COLOR,\n    },\n    objectValueString: {\n      color: theme.OBJECT_VALUE_STRING_COLOR,\n    },\n    objectValueSymbol: {\n      color: theme.OBJECT_VALUE_SYMBOL_COLOR,\n    },\n    objectValueNumber: {\n      color: theme.OBJECT_VALUE_NUMBER_COLOR,\n    },\n    objectValueBoolean: {\n      color: theme.OBJECT_VALUE_BOOLEAN_COLOR,\n    },\n    objectValueFunctionPrefix: {\n      color: theme.OBJECT_VALUE_FUNCTION_PREFIX_COLOR,\n      fontStyle: 'italic',\n    },\n    objectValueFunctionName: {\n      fontStyle: 'italic',\n    },\n  },\n\n  TreeView: {\n    treeViewOutline: {\n      padding: 0,\n      margin: 0,\n      listStyleType: 'none',\n    },\n  },\n\n  TreeNode: {\n    treeNodeBase: {\n      color: theme.BASE_COLOR,\n      backgroundColor: theme.BASE_BACKGROUND_COLOR,\n\n      lineHeight: theme.TREENODE_LINE_HEIGHT,\n      cursor: 'default',\n\n      boxSizing: 'border-box',\n      listStyle: 'none',\n\n      fontFamily: theme.TREENODE_FONT_FAMILY,\n      fontSize: theme.TREENODE_FONT_SIZE,\n    },\n    treeNodePreviewContainer: {},\n    treeNodePlaceholder: {\n      whiteSpace: 'pre',\n\n      fontSize: theme.ARROW_FONT_SIZE,\n      marginRight: theme.ARROW_MARGIN_RIGHT,\n      ...unselectable,\n    },\n    treeNodeArrow: {\n      base: {\n        color: theme.ARROW_COLOR,\n        display: 'inline-block',\n        // lineHeight: '14px',\n        fontSize: theme.ARROW_FONT_SIZE,\n        marginRight: theme.ARROW_MARGIN_RIGHT,\n        ...(parseFloat(theme.ARROW_ANIMATION_DURATION) > 0\n          ? {\n              transition: `transform ${theme.ARROW_ANIMATION_DURATION} ease 0s`,\n            }\n          : {}),\n        ...unselectable,\n      },\n      expanded: {\n        WebkitTransform: 'rotateZ(90deg)',\n        MozTransform: 'rotateZ(90deg)',\n        transform: 'rotateZ(90deg)',\n      },\n      collapsed: {\n        WebkitTransform: 'rotateZ(0deg)',\n        MozTransform: 'rotateZ(0deg)',\n        transform: 'rotateZ(0deg)',\n      },\n    },\n    treeNodeChildNodesContainer: {\n      margin: 0, // reset user-agent style\n      paddingLeft: theme.TREENODE_PADDING_LEFT,\n    },\n  },\n\n  TableInspector: {\n    base: {\n      color: theme.BASE_COLOR,\n\n      position: 'relative',\n      border: `1px solid ${theme.TABLE_BORDER_COLOR}`,\n      fontFamily: theme.BASE_FONT_FAMILY,\n      fontSize: theme.BASE_FONT_SIZE,\n      lineHeight: '120%',\n      boxSizing: 'border-box',\n      cursor: 'default',\n    },\n  },\n\n  TableInspectorHeaderContainer: {\n    base: {\n      top: 0,\n      height: '17px',\n      left: 0,\n      right: 0,\n      overflowX: 'hidden',\n    },\n    table: {\n      tableLayout: 'fixed',\n      borderSpacing: 0,\n      borderCollapse: 'separate',\n      height: '100%',\n      width: '100%',\n      margin: 0,\n    },\n  },\n\n  TableInspectorDataContainer: {\n    tr: {\n      display: 'table-row',\n    },\n    td: {\n      boxSizing: 'border-box',\n      border: 'none', // prevent overrides\n      height: '16px', // /* 0.5 * table.background-size height */\n      verticalAlign: 'top',\n      padding: '1px 4px',\n      WebkitUserSelect: 'text',\n\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      lineHeight: '14px',\n    },\n    div: {\n      position: 'static',\n      top: '17px',\n      bottom: 0,\n      overflowY: 'overlay',\n      transform: 'translateZ(0)',\n\n      left: 0,\n      right: 0,\n      overflowX: 'hidden',\n    },\n    table: {\n      positon: 'static',\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      borderTop: '0 none transparent',\n      margin: 0, // prevent user agent stylesheet overrides\n\n      backgroundImage: theme.TABLE_DATA_BACKGROUND_IMAGE,\n      backgroundSize: theme.TABLE_DATA_BACKGROUND_SIZE,\n      tableLayout: 'fixed',\n\n      // table\n      borderSpacing: 0,\n      borderCollapse: 'separate',\n      // height: '100%',\n      width: '100%',\n\n      fontSize: theme.BASE_FONT_SIZE,\n      lineHeight: '120%',\n    },\n  },\n\n  TableInspectorTH: {\n    base: {\n      position: 'relative', // anchor for sort icon container\n      height: 'auto',\n      textAlign: 'left',\n      backgroundColor: theme.TABLE_TH_BACKGROUND_COLOR,\n      borderBottom: `1px solid ${theme.TABLE_BORDER_COLOR}`,\n      fontWeight: 'normal',\n      verticalAlign: 'middle',\n      padding: '0 4px',\n\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      lineHeight: '14px',\n\n      ':hover': {\n        backgroundColor: theme.TABLE_TH_HOVER_COLOR,\n      },\n    },\n    div: {\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n\n      // prevent user agent stylesheet overrides\n      fontSize: theme.BASE_FONT_SIZE,\n      lineHeight: '120%',\n    },\n  },\n\n  TableInspectorLeftBorder: {\n    none: {\n      borderLeft: 'none',\n    },\n    solid: {\n      borderLeft: `1px solid ${theme.TABLE_BORDER_COLOR}`,\n    },\n  },\n\n  TableInspectorSortIcon: {\n    display: 'block',\n    marginRight: 3, // 4,\n    width: 8,\n    height: 7,\n\n    marginTop: -7,\n    color: theme.TABLE_SORT_ICON_COLOR,\n    fontSize: 12,\n    // lineHeight: 14\n    ...unselectable,\n  },\n});\n", "export const DEFAULT_ROOT_PATH = '$';\n\nconst WILDCARD = '*';\n\nexport function hasChildNodes(data, dataIterator) {\n  return !dataIterator(data).next().done;\n}\n\nexport const wildcardPathsFromLevel = (level) => {\n  // i is depth\n  return Array.from({ length: level }, (_, i) =>\n    [DEFAULT_ROOT_PATH].concat(Array.from({ length: i }, () => '*')).join('.')\n  );\n};\n\nexport const getExpandedPaths = (data, dataIterator, expandPaths, expandLevel, prevExpandedPaths) => {\n  const wildcardPaths = []\n    .concat(wildcardPathsFromLevel(expandLevel))\n    .concat(expandPaths)\n    .filter((path) => typeof path === 'string'); // could be undefined\n\n  const expandedPaths = [];\n  wildcardPaths.forEach((wildcardPath) => {\n    const keyPaths = wildcardPath.split('.');\n    const populatePaths = (curData, curPath, depth) => {\n      if (depth === keyPaths.length) {\n        expandedPaths.push(curPath);\n        return;\n      }\n      const key = keyPaths[depth];\n      if (depth === 0) {\n        if (hasChildNodes(curData, dataIterator) && (key === DEFAULT_ROOT_PATH || key === WILDCARD)) {\n          populatePaths(curData, DEFAULT_ROOT_PATH, depth + 1);\n        }\n      } else {\n        if (key === WILDCARD) {\n          for (const { name, data } of dataIterator(curData)) {\n            if (hasChildNodes(data, dataIterator)) {\n              populatePaths(data, `${curPath}.${name}`, depth + 1);\n            }\n          }\n        } else {\n          const value = curData[key];\n          if (hasChildNodes(value, dataIterator)) {\n            populatePaths(value, `${curPath}.${key}`, depth + 1);\n          }\n        }\n      }\n    };\n\n    populatePaths(data, '', 0);\n  });\n\n  return expandedPaths.reduce(\n    (obj, path) => {\n      obj[path] = true;\n      return obj;\n    },\n    { ...prevExpandedPaths }\n  );\n};\n", "import React, { FC } from 'react';\nimport { ObjectName } from '../object/ObjectName';\nimport { ObjectPreview } from './ObjectPreview';\n\nexport const ObjectRootLabel: FC<any> = ({ name, data }) => {\n  if (typeof name === 'string') {\n    return (\n      <span>\n        <ObjectName name={name} />\n        <span>: </span>\n        <ObjectPreview data={data} />\n      </span>\n    );\n  } else {\n    return <ObjectPreview data={data} />;\n  }\n};\n", "import React, { FC } from 'react';\nimport { useStyles } from '../styles';\n\n/**\n * A view for object property names.\n *\n * If the property name is enumerable (in Object.keys(object)),\n * the property name will be rendered normally.\n *\n * If the property name is not enumerable (`Object.prototype.propertyIsEnumerable()`),\n * the property name will be dimmed to show the difference.\n */\nexport const ObjectName: FC<any> = ({ name, dimmed = false, styles = {} }) => {\n  const themeStyles = useStyles('ObjectName');\n  const appliedStyles = {\n    ...themeStyles.base,\n    ...(dimmed ? themeStyles['dimmed'] : {}),\n    ...styles,\n  };\n\n  return <span style={appliedStyles}>{name}</span>;\n};\n\n// ObjectName.propTypes = {\n//   /** Property name */\n//   name: PropTypes.string,\n//   /** Should property name be dimmed */\n//   dimmed: PropTypes.bool,\n// };\n", "import React, { FC, ReactChild } from 'react';\n\nimport { ObjectValue } from '../object/ObjectValue';\nimport { ObjectName } from '../object/ObjectName';\n\nimport { useStyles } from '../styles';\n\nimport { hasOwnProperty } from '../utils/objectPrototype';\nimport { getPropertyValue } from '../utils/propertyUtils';\n\n/* intersperse arr with separator */\nfunction intersperse(arr: any[], sep: string) {\n  if (arr.length === 0) {\n    return [];\n  }\n\n  return arr.slice(1).reduce((xs, x) => xs.concat([sep, x]), [arr[0]]);\n}\n\n/**\n * A preview of the object\n */\nexport const ObjectPreview: FC<any> = ({ data }) => {\n  const styles = useStyles('ObjectPreview');\n  const object = data;\n\n  if (typeof object !== 'object' || object === null || object instanceof Date || object instanceof RegExp) {\n    return <ObjectValue object={object} />;\n  }\n\n  if (Array.isArray(object)) {\n    const maxProperties = styles.arrayMaxProperties;\n    const previewArray = object\n      .slice(0, maxProperties)\n      .map((element, index) => <ObjectValue key={index} object={element} />);\n    if (object.length > maxProperties) {\n      previewArray.push(<span key=\"ellipsis\">…</span>);\n    }\n    const arrayLength = object.length;\n    return (\n      <React.Fragment>\n        <span style={styles.objectDescription}>{arrayLength === 0 ? `` : `(${arrayLength})\\xa0`}</span>\n        <span style={styles.preview}>[{intersperse(previewArray, ', ')}]</span>\n      </React.Fragment>\n    );\n  } else {\n    const maxProperties = styles.objectMaxProperties;\n    const propertyNodes: ReactChild[] = [];\n    for (const propertyName in object) {\n      if (hasOwnProperty.call(object, propertyName)) {\n        let ellipsis;\n        if (propertyNodes.length === maxProperties - 1 && Object.keys(object).length > maxProperties) {\n          ellipsis = <span key={'ellipsis'}>…</span>;\n        }\n\n        const propertyValue = getPropertyValue(object, propertyName);\n        propertyNodes.push(\n          <span key={propertyName}>\n            <ObjectName name={propertyName || `\"\"`} />\n            :&nbsp;\n            <ObjectValue object={propertyValue} />\n            {ellipsis}\n          </span>\n        );\n        if (ellipsis) break;\n      }\n    }\n\n    const objectConstructorName = object.constructor ? object.constructor.name : 'Object';\n\n    return (\n      <React.Fragment>\n        <span style={styles.objectDescription}>\n          {objectConstructorName === 'Object' ? '' : `${objectConstructorName} `}\n        </span>\n        <span style={styles.preview}>\n          {'{'}\n          {intersperse(propertyNodes, ', ')}\n          {'}'}\n        </span>\n      </React.Fragment>\n    );\n  }\n};\n", "import React, { FC } from 'react';\n\nimport { useStyles } from '../styles';\n\n/**\n * A short description of the object values.\n * Can be used to render tree node in ObjectInspector\n * or render objects in TableInspector.\n */\nexport const ObjectValue: FC<any> = ({ object, styles }) => {\n  const themeStyles = useStyles('ObjectValue');\n\n  const mkStyle = (key: any) => ({ ...themeStyles[key], ...styles });\n\n  switch (typeof object) {\n    case 'bigint':\n      return <span style={mkStyle('objectValueNumber')}>{String(object)}n</span>;\n    case 'number':\n      return <span style={mkStyle('objectValueNumber')}>{String(object)}</span>;\n    case 'string':\n      return <span style={mkStyle('objectValueString')}>\"{object}\"</span>;\n    case 'boolean':\n      return <span style={mkStyle('objectValueBoolean')}>{String(object)}</span>;\n    case 'undefined':\n      return <span style={mkStyle('objectValueUndefined')}>undefined</span>;\n    case 'object':\n      if (object === null) {\n        return <span style={mkStyle('objectValueNull')}>null</span>;\n      }\n      if (object instanceof Date) {\n        return <span>{object.toString()}</span>;\n      }\n      if (object instanceof RegExp) {\n        return <span style={mkStyle('objectValueRegExp')}>{object.toString()}</span>;\n      }\n      if (Array.isArray(object)) {\n        return <span>{`Array(${object.length})`}</span>;\n      }\n      if (!object.constructor) {\n        return <span>Object</span>;\n      }\n      if (typeof object.constructor.isBuffer === 'function' && object.constructor.isBuffer(object)) {\n        return <span>{`Buffer[${object.length}]`}</span>;\n      }\n\n      return <span>{object.constructor.name}</span>;\n    case 'function':\n      return (\n        <span>\n          <span style={mkStyle('objectValueFunctionPrefix')}>ƒ&nbsp;</span>\n          <span style={mkStyle('objectValueFunctionName')}>{object.name}()</span>\n        </span>\n      );\n    case 'symbol':\n      return <span style={mkStyle('objectValueSymbol')}>{object.toString()}</span>;\n    default:\n      return <span />;\n  }\n};\n\n// ObjectValue.propTypes = {\n//   // the object to describe\n//   object: PropTypes.any,\n// };\n", "export const hasOwnProperty = Object.prototype.hasOwnProperty;\nexport const propertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n", "export function getPropertyValue(object, propertyName) {\n  const propertyDescriptor = Object.getOwnPropertyDescriptor(object, propertyName);\n  if (propertyDescriptor.get) {\n    try {\n      return propertyDescriptor.get();\n    } catch {\n      return propertyDescriptor.get;\n    }\n  }\n\n  return object[propertyName];\n}\n", "import React, { FC } from 'react';\nimport { ObjectName } from '../object/ObjectName';\nimport { ObjectValue } from '../object/ObjectValue';\nimport { ObjectPreview } from './ObjectPreview';\n\n/**\n * if isNonenumerable is specified, render the name dimmed\n */\nexport const ObjectLabel: FC<any> = ({ name, data, isNonenumerable = false }) => {\n  const object = data;\n\n  return (\n    <span>\n      {typeof name === 'string' ? <ObjectName name={name} dimmed={isNonenumerable} /> : <ObjectPreview data={name} />}\n      <span>: </span>\n      <ObjectValue object={object} />\n    </span>\n  );\n};\n\n// ObjectLabel.propTypes = {\n//   /** Non enumerable object property will be dimmed */\n//   isNonenumerable: PropTypes.bool,\n// };\n", "/**\n * Specs:\n * https://developer.chrome.com/devtools/docs/commandline-api#tabledata-columns\n * https://developer.mozilla.org/en-US/docs/Web/API/Console/table\n */\n\nimport React, { FC, useCallback, useState } from 'react';\n\nimport { getHeaders } from './getHeaders';\nimport { DataContainer } from './DataContainer';\nimport { HeaderContainer } from './HeaderContainer';\n\nimport { themeAcceptor, useStyles } from '../styles';\n\nconst TableInspector: FC<any> = ({\n  // The JS object you would like to inspect, either an array or an object\n  data,\n  // An array of the names of the columns you'd like to display in the table\n  columns,\n}) => {\n  const styles = useStyles('TableInspector');\n\n  const [{ sorted, sortIndexColumn, sortColumn, sortAscending }, setState] = useState({\n    // has user ever clicked the <th> tag to sort?\n    sorted: false,\n    // is index column sorted?\n    sortIndexColumn: false,\n    // which column is sorted?\n    sortColumn: undefined,\n    // is sorting ascending or descending?\n    sortAscending: false,\n  });\n\n  const handleIndexTHClick = useCallback(() => {\n    setState(({ sortIndexColumn, sortAscending }) => ({\n      sorted: true,\n      sortIndexColumn: true,\n      sortColumn: undefined,\n      // when changed to a new column, default to asending\n      sortAscending: sortIndexColumn ? !sortAscending : true,\n    }));\n  }, []);\n\n  const handleTHClick = useCallback((col) => {\n    setState(({ sortColumn, sortAscending }) => ({\n      sorted: true,\n      sortIndexColumn: false,\n      // update sort column\n      sortColumn: col,\n      // when changed to a new column, default to asending\n      sortAscending: col === sortColumn ? !sortAscending : true,\n    }));\n  }, []);\n\n  if (typeof data !== 'object' || data === null) {\n    return <div />;\n  }\n\n  let { rowHeaders, colHeaders } = getHeaders(data);\n\n  // columns to be displayed are specified\n  // NOTE: there's some space for optimization here\n  if (columns !== undefined) {\n    colHeaders = columns;\n  }\n\n  let rowsData = rowHeaders.map((rowHeader) => data[rowHeader]);\n\n  let columnDataWithRowIndexes; /* row indexes are [0..nRows-1] */\n  // TODO: refactor\n  if (sortColumn !== undefined) {\n    // the column to be sorted (rowsData, column) => [[columnData, rowIndex]]\n    columnDataWithRowIndexes = rowsData.map((rowData, index: number) => {\n      // normalize rowData\n      if (typeof rowData === 'object' && rowData !== null /*&& rowData.hasOwnProperty(sortColumn)*/) {\n        const columnData = rowData[sortColumn];\n        return [columnData, index];\n      }\n      return [undefined, index];\n    });\n  } else {\n    if (sortIndexColumn) {\n      columnDataWithRowIndexes = rowHeaders.map((rowData, index: number) => {\n        const columnData = rowHeaders[index];\n        return [columnData, index];\n      });\n    }\n  }\n  if (columnDataWithRowIndexes !== undefined) {\n    // apply a mapper before sorting (because we need to access inside a container)\n    const comparator = (mapper, ascending) => {\n      return (a, b) => {\n        const v1 = mapper(a); // the datum\n        const v2 = mapper(b);\n        const type1 = typeof v1;\n        const type2 = typeof v2;\n        // use '<' operator to compare same type of values or compare type precedence order #\n        const lt = (v1, v2) => {\n          if (v1 < v2) {\n            return -1;\n          } else if (v1 > v2) {\n            return 1;\n          } else {\n            return 0;\n          }\n        };\n        let result;\n        if (type1 === type2) {\n          result = lt(v1, v2);\n        } else {\n          // order of different types\n          const order = {\n            string: 0,\n            number: 1,\n            object: 2,\n            symbol: 3,\n            boolean: 4,\n            undefined: 5,\n            function: 6,\n          };\n          result = lt(order[type1], order[type2]);\n        }\n        // reverse result if descending\n        if (!ascending) result = -result;\n        return result;\n      };\n    };\n    const sortedRowIndexes = columnDataWithRowIndexes\n      .sort(comparator((item) => item[0], sortAscending))\n      .map((item) => item[1]); // sorted row indexes\n    rowHeaders = sortedRowIndexes.map((i) => rowHeaders[i]);\n    rowsData = sortedRowIndexes.map((i) => rowsData[i]);\n  }\n\n  return (\n    <div style={styles.base}>\n      <HeaderContainer\n        columns={colHeaders}\n        /* for sorting */\n        sorted={sorted}\n        sortIndexColumn={sortIndexColumn}\n        sortColumn={sortColumn}\n        sortAscending={sortAscending}\n        onTHClick={handleTHClick}\n        onIndexTHClick={handleIndexTHClick}\n      />\n      <DataContainer rows={rowHeaders} columns={colHeaders} rowsData={rowsData} />\n    </div>\n  );\n};\n\n// TableInspector.propTypes = {\n//   /**\n//    * the Javascript object you would like to inspect, either an array or an object\n//    */\n//   data: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n//   /**\n//    * An array of the names of the columns you'd like to display in the table\n//    */\n//   columns: PropTypes.array,\n// };\n\nconst themedTableInspector = themeAcceptor(TableInspector);\n\nexport { themedTableInspector as TableInspector };\n", "export function getHeaders(data): any {\n  if (typeof data === 'object') {\n    let rowHeaders: any[] = [];\n    // is an array\n    if (Array.isArray(data)) {\n      const nRows = data.length;\n      rowHeaders = [...Array(nRows).keys()];\n    } else if (data !== null) {\n      // is an object\n      // keys are row indexes\n      rowHeaders = Object.keys(data);\n    }\n\n    // Time: O(nRows * nCols)\n    const colHeaders = rowHeaders.reduce((colHeaders, rowHeader) => {\n      const row = data[rowHeader];\n      if (typeof row === 'object' && row !== null) {\n        /* O(nCols) Could optimize `includes` here */\n        const cols = Object.keys(row);\n        cols.reduce((xs, x) => {\n          if (!xs.includes(x)) {\n            /* xs is the colHeaders to be filled by searching the row's indexes */\n            xs.push(x);\n          }\n          return xs;\n        }, colHeaders);\n      }\n      return colHeaders;\n    }, []);\n    return {\n      rowHeaders: rowHeaders,\n      colHeaders: colHeaders,\n    };\n  }\n  return undefined;\n}\n", "import React from 'react';\nimport { ObjectValue } from '../object/ObjectValue';\n\nimport { hasOwnProperty } from '../utils/objectPrototype';\n\nimport { useStyles } from '../styles';\n\nexport const DataContainer = ({ rows, columns, rowsData }) => {\n  const styles = useStyles('TableInspectorDataContainer');\n  const borderStyles = useStyles('TableInspectorLeftBorder');\n\n  return (\n    <div style={styles.div}>\n      <table style={styles.table}>\n        <colgroup />\n        <tbody>\n          {rows.map((row, i) => (\n            <tr key={row} style={styles.tr}>\n              <td style={{ ...styles.td, ...borderStyles.none }}>{row}</td>\n\n              {columns.map((column) => {\n                const rowData = rowsData[i];\n                // rowData could be\n                //  object -> index by key\n                //    array -> index by array index\n                //    null -> pass\n                //  boolean -> pass\n                //  string -> pass (hasOwnProperty returns true for [0..len-1])\n                //  number -> pass\n                //  function -> pass\n                //  symbol\n                //  undefined -> pass\n                if (typeof rowData === 'object' && rowData !== null && hasOwnProperty.call(rowData, column)) {\n                  return (\n                    <td key={column} style={{ ...styles.td, ...borderStyles.solid }}>\n                      <ObjectValue object={rowData[column]} />\n                    </td>\n                  );\n                } else {\n                  return <td key={column} style={{ ...styles.td, ...borderStyles.solid }} />;\n                }\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n", "import React from 'react';\nimport { useStyles } from '../styles';\nimport { TH } from './TH';\n\nexport const HeaderContainer = ({\n  indexColumnText = '(index)',\n  columns = [],\n  sorted,\n  sortIndexColumn,\n  sortColumn,\n  sortAscending,\n  onTHClick,\n  onIndexTHClick,\n}) => {\n  const styles = useStyles('TableInspectorHeaderContainer');\n  const borderStyles = useStyles('TableInspectorLeftBorder');\n  return (\n    <div style={styles.base}>\n      <table style={styles.table}>\n        <tbody>\n          <tr>\n            <TH\n              borderStyle={borderStyles.none}\n              sorted={sorted && sortIndexColumn}\n              sortAscending={sortAscending}\n              onClick={onIndexTHClick}>\n              {indexColumnText}\n            </TH>\n            {columns.map((column) => (\n              <TH\n                borderStyle={borderStyles.solid}\n                key={column}\n                sorted={sorted && sortColumn === column}\n                sortAscending={sortAscending}\n                onClick={onTHClick.bind(null, column)}>\n                {column}\n              </TH>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n", "import React, { useCallback, useState } from 'react';\n\nimport { useStyles } from '../styles';\n\nconst SortIconContainer = (props) => (\n  <div\n    style={{\n      position: 'absolute',\n      top: 1,\n      right: 0,\n      bottom: 1,\n      display: 'flex',\n      alignItems: 'center',\n    }}>\n    {props.children}\n  </div>\n);\n\nconst SortIcon = ({ sortAscending }) => {\n  const styles = useStyles('TableInspectorSortIcon');\n  const glyph = sortAscending ? '▲' : '▼';\n  return <div style={styles}>{glyph}</div>;\n};\n\nexport const TH = ({\n  sortAscending = false,\n  sorted = false,\n  onClick = undefined,\n  borderStyle = {},\n  children,\n  ...thProps\n}) => {\n  const styles = useStyles('TableInspectorTH');\n  const [hovered, setHovered] = useState(false);\n\n  const handleMouseEnter = useCallback(() => setHovered(true), []);\n  const handleMouseLeave = useCallback(() => setHovered(false), []);\n\n  return (\n    <th\n      {...thProps}\n      style={{\n        ...styles.base,\n        ...borderStyle,\n        ...(hovered ? styles.base[':hover'] : {}),\n      }}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onClick={onClick}>\n      <div style={styles.div}>{children}</div>\n      {sorted && (\n        <SortIconContainer>\n          <SortIcon sortAscending={sortAscending} />\n        </SortIconContainer>\n      )}\n    </th>\n  );\n};\n", "import React, { FC } from 'react';\n\nimport { DOMNodePreview } from './DOMNodePreview';\nimport { TreeView } from '../tree-view/TreeView';\n\nimport { shouldInline } from './shouldInline';\nimport { themeAcceptor } from '../styles';\n\nconst domIterator = function* (data: any) {\n  if (data && data.childNodes) {\n    const textInlined = shouldInline(data);\n\n    if (textInlined) {\n      return;\n    }\n\n    for (let i = 0; i < data.childNodes.length; i++) {\n      const node = data.childNodes[i];\n\n      if (node.nodeType === Node.TEXT_NODE && node.textContent.trim().length === 0) continue;\n\n      yield {\n        name: `${node.tagName}[${i}]`,\n        data: node,\n      };\n    }\n\n    // at least 1 child node\n    if (data.tagName) {\n      yield {\n        name: 'CLOSE_TAG',\n        data: {\n          tagName: data.tagName,\n        },\n        isCloseTag: true,\n      };\n    }\n  }\n};\n\nconst DOMInspector: FC<any> = (props) => {\n  return <TreeView nodeRenderer={DOMNodePreview} dataIterator={domIterator} {...props} />;\n};\n\n// DOMInspector.propTypes = {\n//   // The DOM Node to inspect\n//   data: PropTypes.object.isRequired,\n// };\n\nconst themedDOMInspector = themeAcceptor(DOMInspector);\n\nexport { themedDOMInspector as DOMInspector };\n", "import React, { FC, ReactChild } from 'react';\n\nimport { useStyles } from '../styles';\nimport { shouldInline } from './shouldInline';\n\nconst OpenTag: FC<any> = ({ tagName, attributes, styles }) => {\n  return (\n    <span style={styles.base}>\n      {'<'}\n      <span style={styles.tagName}>{tagName}</span>\n\n      {(() => {\n        if (attributes) {\n          const attributeNodes: ReactChild[] = [];\n          for (let i = 0; i < attributes.length; i++) {\n            const attribute = attributes[i];\n            attributeNodes.push(\n              <span key={i}>\n                {' '}\n                <span style={styles.htmlAttributeName}>{attribute.name}</span>\n                {'=\"'}\n                <span style={styles.htmlAttributeValue}>{attribute.value}</span>\n                {'\"'}\n              </span>\n            );\n          }\n          return attributeNodes;\n        }\n      })()}\n\n      {'>'}\n    </span>\n  );\n};\n\n// isChildNode style={{ marginLeft: -12 /* hack: offset placeholder */ }}\nconst CloseTag = ({ tagName, isChildNode = false, styles }) => (\n  <span style={Object.assign({}, styles.base, isChildNode && styles.offsetLeft)}>\n    {'</'}\n    <span style={styles.tagName}>{tagName}</span>\n    {'>'}\n  </span>\n);\n\nconst nameByNodeType = {\n  1: 'ELEMENT_NODE',\n  3: 'TEXT_NODE',\n  7: 'PROCESSING_INSTRUCTION_NODE',\n  8: 'COMMENT_NODE',\n  9: 'DOCUMENT_NODE',\n  10: 'DOCUMENT_TYPE_NODE', // http://stackoverflow.com/questions/6088972/get-doctype-of-an-html-as-string-with-javascript\n  11: 'DOCUMENT_FRAGMENT_NODE',\n};\n\nexport const DOMNodePreview: FC<any> = ({ isCloseTag, data, expanded }) => {\n  const styles = useStyles('DOMNodePreview');\n\n  if (isCloseTag) {\n    return <CloseTag styles={styles.htmlCloseTag} isChildNode tagName={data.tagName} />;\n  }\n\n  switch (data.nodeType) {\n    case Node.ELEMENT_NODE:\n      return (\n        <span>\n          <OpenTag tagName={data.tagName} attributes={data.attributes} styles={styles.htmlOpenTag} />\n\n          {shouldInline(data) ? data.textContent : !expanded && '…'}\n\n          {!expanded && <CloseTag tagName={data.tagName} styles={styles.htmlCloseTag} />}\n        </span>\n      );\n    case Node.TEXT_NODE:\n      return <span>{data.textContent}</span>;\n    case Node.CDATA_SECTION_NODE:\n      return <span>{'<![CDATA[' + data.textContent + ']]>'}</span>;\n    case Node.COMMENT_NODE:\n      return (\n        <span style={styles.htmlComment}>\n          {'<!--'}\n          {data.textContent}\n          {'-->'}\n        </span>\n      );\n    case Node.PROCESSING_INSTRUCTION_NODE:\n      return <span>{data.nodeName}</span>;\n    case Node.DOCUMENT_TYPE_NODE:\n      return (\n        <span style={styles.htmlDoctype}>\n          {'<!DOCTYPE '}\n          {data.name}\n          {data.publicId ? ` PUBLIC \"${data.publicId}\"` : ''}\n          {!data.publicId && data.systemId ? ' SYSTEM' : ''}\n          {data.systemId ? ` \"${data.systemId}\"` : ''}\n          {'>'}\n        </span>\n      );\n    case Node.DOCUMENT_NODE:\n      return <span>{data.nodeName}</span>;\n    case Node.DOCUMENT_FRAGMENT_NODE:\n      return <span>{data.nodeName}</span>;\n    default:\n      return <span>{nameByNodeType[data.nodeType]}</span>;\n  }\n};\n\n// DOMNodePreview.propTypes = {\n//   /** If true, just render a close tag */\n//   isCloseTag: PropTypes.bool,\n//   /**  */\n//   name: PropTypes.string,\n//   /** The DOM Node */\n//   data: PropTypes.object.isRequired,\n//   /** Whether the DOM node has been expanded. */\n//   expanded: PropTypes.bool.isRequired,\n// };\n", "const TEXT_NODE_MAX_INLINE_CHARS = 80;\n\nexport const shouldInline = (data) =>\n  data.childNodes.length === 0 ||\n  (data.childNodes.length === 1 &&\n    data.childNodes[0].nodeType === Node.TEXT_NODE &&\n    data.textContent.length < TEXT_NODE_MAX_INLINE_CHARS);\n", "export { chromeLight, chromeDark } from './styles/themes';\n\nimport { ObjectInspector } from './object-inspector/ObjectInspector';\nimport { TableInspector } from './table-inspector/TableInspector';\nimport { DOMInspector } from './dom-inspector/DOMInspector';\n\nimport { ObjectLabel } from './object-inspector/ObjectLabel';\nimport { ObjectPreview } from './object-inspector/ObjectPreview';\nimport { ObjectRootLabel } from './object-inspector/ObjectRootLabel';\n\nimport { ObjectValue } from './object/ObjectValue';\nimport { ObjectName } from './object/ObjectName';\n\nexport { TableInspector, ObjectInspector, ObjectLabel, ObjectPreview, ObjectRootLabel, ObjectValue, ObjectName };\n\nimport React, { ComponentProps, FC } from 'react';\nimport isDOM from 'is-dom';\n\nexport const Inspector: FC<TableInspectorProps | ObjectInspectorProps> = ({ table = false, data, ...rest }) => {\n  if (table) {\n    return <TableInspector data={data} {...rest} />;\n  }\n\n  if (isDOM(data)) return <DOMInspector data={data} {...rest} />;\n\n  return <ObjectInspector data={data} {...rest} />;\n};\n\ninterface TableInspectorProps extends ComponentProps<typeof TableInspector> {\n  table: true;\n}\ninterface ObjectInspectorProps extends ComponentProps<typeof ObjectInspector> {\n  table: false;\n}\n"],
  "mappings": "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",
  "names": ["import_react", "createContext2", "React", "React2", "memo2", "useContext2", "React3", "React4", "React5", "React6", "React7", "React8", "React9", "React10", "React11", "useState2", "useCallback2", "React12", "useState3", "useCallback3", "React13", "React14", "React15", "__toESM", "React16"]
}
